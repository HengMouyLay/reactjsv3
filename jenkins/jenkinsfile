pipeline {
    agent any

    environment {
        // Define your Docker Hub credentials ID
        DOCKER_HUB_CREDENTIALS = 'dockerhub'
        IMAGE_NAME = 'hengmouylay/react_js'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        CONTAINER_NAME = 'reactjs4' // Replace with your container name

        TELEGRAM_TOKEN = '6964464848:AAE2euB4z54TWaameghHukIq61fw0zFgdvM'
        TELEGRAM_CHAT_ID = '498606323'
        TELEGRAM_API_URL = "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage"
    }

    stages {
        stage('Clone Repository') {
            steps {
                 git branch: 'main', url: 'https://github.com/HengMouyLay/reactjsv3.git'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', DOCKER_HUB_CREDENTIALS) {
                        def customImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                        customImage.push()
                    }
                     def containerExists = sh(script: "docker ps -a --filter name=${CONTAINER_NAME} --format '{{.Names}}'", returnStatus: true) == 0                   
                    if (containerExists) {
                    sh '''      
                       docker stop ${CONTAINER_NAME}
                       docker rm ${CONTAINER_NAME}                       
                        '''
                       } 
                     sh '''    
                       docker run -d -p 1989:80 --name ${CONTAINER_NAME} hengmouylay/react_js:${IMAGE_TAG}
                        curl ifconfig.me 
                        '''
                    env.SERVICE_IP = sh(script: 'hostname -I | awk \'{print $1}\'', returnStdout: true).trim()
                    env.SERVICE_PORT = sh(script: 'echo "8080"', returnStdout: true).trim() // Example static port
                     def message = "Service is running at IP: ${env.SERVICE_IP} on port: ${env.SERVICE_PORT}"
                    def response = sh(
                        script: """
                        curl -s -X POST ${TELEGRAM_API_URL} \
                        -d chat_id=${TELEGRAM_CHAT_ID} \
                        -d text="${message}"
                        """,
                        returnStdout: true
                    ).trim()
                    echo "Telegram response: ${response}"
}
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
